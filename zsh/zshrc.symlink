# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/dotfiles-1

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

export TERM=xterm-256color

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="lambda"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
plugins=(git git-flow autojump)

source $ZSH/oh-my-zsh.sh

# User configuration

# Source git aliases again, because the `git` plugin overwrites aliases
source $HOME/dotfiles-1/git/aliases.zsh

export FRONTROW_PATH="$HOME/projects/frontrow/megarepo/"
export PATH="$HOME/.screenlayout/:/usr/local/pgsql/bin:./node_modules/.bin:~/.yarn/bin/:~/dotfiles-1/bin:/opt/ghc/bin:$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:./dist"

# Fast GHC Options for Stack
export FAST_GHC_OPTIONS='-fobject-code -j +RTS -A128m -n2m -RTS'

precmd() {
  RPROMPT=""
}

zle-keymap-select() {
  RPROMPT=""
  [[ $KEYMAP = vicmd ]] && RPROMPT="(CMD)"
  () { return $__prompt_status }
  zle reset-prompt
}

zle-line-init() {
  typeset -g __prompt_status="$?"
}

zle -N zle-keymap-select
zle -N zle-line-init

autoload -U +X bashcompinit && bashcompinit
eval "$(stack --bash-completion-script "$(which stack)")"

export EDITOR='nvim'

# Incremental history search
bindkey '^R' history-incremental-search-backward

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

gsettings set org.compiz.core:/org/compiz/profiles/unity/plugins/core/ vsize 3
gsettings set org.compiz.core:/org/compiz/profiles/unity/plugins/core/ hsize 3

GPG_TTY=$(tty)
export GPG_TTY

start-work() {
  cd $HOME/projects/frontrow/megarepo/backend
  make setup
  notify-send "Make reset is finished"
}

stack-watch-match() {
  if [ $# -eq 0 ]; then
    stack test --fast $(basename $(pwd)) --file-watch \
      --no-run-tests
      --ghc-options="$FAST_GHC_OPTIONS" \
      --interleaved-output
  else
    stack test --fast $(basename $(pwd)) --file-watch \
      --test-arguments="-m \"$1\"" \
      --ghc-options="$FAST_GHC_OPTIONS" \
      --interleaved-output
  fi
}

fr-compose() {
  (cd $HOME/projects/frontrow/megarepo && docker-compose -f docker-compose-frontend-dev.yml "$@")
}
