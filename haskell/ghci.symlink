import Control.Applicative
import Control.Monad
import Data.Function
import Data.Maybe
import qualified Data.List as L
import Text.Show.Functions
import Control.Arrow

:set +m

:set prompt "λ> "
:set prompt2 "λ| "

let ghciEscapeShellArg arg = "'" ++ concatMap (\c -> if c == '\'' then "'\"'\"'" else [c]) arg ++ "'"
:def! hoogle return . (":! hoogle --color --count=15 " ++) . ghciEscapeShellArg

:def! doc return . (":! hoogle --info --color " ++) . ghciEscapeShellArg
